<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>吴东的个人博客</title>
  
  <subtitle>coding for fun！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zoomdong.site/"/>
  <updated>2017-11-15T09:26:12.738Z</updated>
  <id>http://zoomdong.site/</id>
  
  <author>
    <name>吴东</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>第五周C++作业题解</title>
    <link href="http://zoomdong.site/2017/11/15/tijie/"/>
    <id>http://zoomdong.site/2017/11/15/tijie/</id>
    <published>2017-11-15T04:15:17.000Z</published>
    <updated>2017-11-15T09:26:12.738Z</updated>
    
    <content type="html"><![CDATA[<h1 id="希望能帮助那些卡题目的朋友们"><a href="#希望能帮助那些卡题目的朋友们" class="headerlink" title="希望能帮助那些卡题目的朋友们"></a>希望能帮助那些卡题目的朋友们</h1><hr><p>by Acmclub：<br>汤畅绪 吴东小组等人。</p><h2 id="申明"><a href="#申明" class="headerlink" title="申明"></a>申明</h2><p>本次题解可能出的并不是非常的好，因为这周考试太多。招架不过来，那些题目我自己也有很多是直接暴力解决的。但还是吸取了组员以及acmclub其他成员的代码建议。比较简单的题目我会直接给大家放核心代码，因为这些题目看代码你就会觉得恍然大悟。希望轻喷，求体谅。。。。如果有问题大家在NEUQ OJ交流群上提问就行了，群里的成员都会为你们解决的，大家都很热心的。</p><h2 id="分了2个板块，一个是小组讨论觉得比较水的题目，还有一个就是有点难度的题目。"><a href="#分了2个板块，一个是小组讨论觉得比较水的题目，还有一个就是有点难度的题目。" class="headerlink" title="分了2个板块，一个是小组讨论觉得比较水的题目，还有一个就是有点难度的题目。"></a>分了2个板块，一个是小组讨论觉得比较水的题目，还有一个就是有点难度的题目。</h2><h2 id="水题"><a href="#水题" class="headerlink" title="水题"></a>水题</h2><h3 id="1012-SZ斐波拉契数列"><a href="#1012-SZ斐波拉契数列" class="headerlink" title="1012: SZ斐波拉契数列"></a>1012: SZ斐波拉契数列</h3><p>比较水的一个题目。利用函数写一个递归或者循环一个递推都是可以解决的。</p><h3 id="核心代码-递推"><a href="#核心代码-递推" class="headerlink" title="核心代码(递推)"></a>核心代码(递推)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">int F(int a,int b,int n)&#123;</div><div class="line"><span class="keyword">if</span>(n==1) <span class="built_in">return</span> a;</div><div class="line"><span class="keyword">if</span>(n==2) <span class="built_in">return</span> b;</div><div class="line"><span class="keyword">if</span>(n&gt;2)</div><div class="line">&#123;</div><div class="line"><span class="keyword">if</span>(n%2==0) <span class="built_in">return</span> F(a,b,n-1)+F(a,b,n-2)+F(a,b,n-3);</div><div class="line">     <span class="keyword">else</span> <span class="built_in">return</span> F(a,b,n-1)+F(a,b,n-2);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>递归的话直接在主函数里面写就行了。</p><h3 id="1318-兔子问题"><a href="#1318-兔子问题" class="headerlink" title="1318: 兔子问题"></a>1318: 兔子问题</h3><p>题目描述：<br>有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔</p><p>子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数</p><p>为多少？</p><p>输入：<br>n</p><p>输出：<br>兔子的总队数</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">3</div></pre></td></tr></table></figure><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">2</div></pre></td></tr></table></figure><p>同样递归或者递推来解决。<br>上面那个题目用的递归解决，这个题目上递推吧。</p><h3 id="核心代码（递推）"><a href="#核心代码（递推）" class="headerlink" title="核心代码（递推）"></a>核心代码（递推）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(int i=3;i&lt;=n;i++)</div><div class="line">&#123;</div><div class="line">s[i]=s[i-1]+s[i-2];</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>n为1,2另外讨论行了，一个循环就可以解决。</p><h3 id="1319-角谷定理"><a href="#1319-角谷定理" class="headerlink" title="1319: 角谷定理"></a>1319: 角谷定理</h3><p>题目描述：<br>输入一个自然数，若为偶数，则把他除以2，若为奇数，则把它乘以3加1，经过如此有限次运算后，总可以得到自然数值1.求经过多少次可得到自然数1</p><h4 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">22</div></pre></td></tr></table></figure><h4 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">16</div></pre></td></tr></table></figure><h3 id="题（hu）目（luan）分析"><a href="#题（hu）目（luan）分析" class="headerlink" title="题（hu）目（luan）分析"></a>题（hu）目（luan）分析</h3><p>一个循环，循环条件不为1，然后对n分奇数偶数的情况进行讨论。然后每循环一次用一个数来进行计数就行了。<br>题目比较水，不上代码了。</p><h3 id="1156-求具有abcd-ab-cd-2性质的四位数"><a href="#1156-求具有abcd-ab-cd-2性质的四位数" class="headerlink" title="1156: 求具有abcd=(ab+cd)2性质的四位数"></a>1156: 求具有abcd=(ab+cd)2性质的四位数</h3><p>描述<br>题目描述：<br>3025这个数具有一种独特的性质：将它平分为二段，即30和25，使之相加后求平方，即(30+25)2，恰好等于3025本身。请求出具有这样性质的全部四位数</p><p>满足题意的数全部四位数(从小到大输出,且数之间用两个空格分开) </p><h3 id="代码讲解-amp-amp-题目分析"><a href="#代码讲解-amp-amp-题目分析" class="headerlink" title="代码讲解&amp;&amp;题目分析"></a>代码讲解&amp;&amp;题目分析</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(int i=1000;i&lt;=9999;i++)</div><div class="line">&#123;</div><div class="line">int a=i/100,b=i<span class="_">-a</span>*100;//a表示4位数前2位，b表示后2位。</div><div class="line"><span class="keyword">if</span>((a+b)*(a+b)==i)</div><div class="line">cout&lt;&lt;i&lt;&lt;<span class="string">" "</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>题目要求是要找出其中有关的四位数，那我们直接遍历所有的4位数，不用担心会出现超时等问题，因为复杂度是O（n）。找出里面符合题目要求的既可了。</p><h3 id="1509-汉诺塔"><a href="#1509-汉诺塔" class="headerlink" title="1509: 汉诺塔"></a>1509: 汉诺塔</h3><p>描述<br>题目描述：<br>汉诺塔是由三根杆子A，B，C组成的。A杆上有N个穿孔圆盘，盘的尺寸由下到上依次变小，编号从1到n。要求按下列规则将所有圆盘移至C杆：每次只能移动一个圆盘；大盘不能叠在小盘上面。提示：可将圆盘临时置于B杆，也可将从A杆移出的圆盘重新移回A杆，但都必须尊循上述两条规则。问：如何移？</p><p>输入：<br>一个整数N（N&lt;=10），表示圆盘的个数</p><p>输出：<br>移动盘子的过程，每一步一行，格式为“要移动的盘子所在的柱子编号—要移动到得柱子的编号”</p><h4 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">2</div></pre></td></tr></table></figure><h4 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">A---B</div><div class="line">A---C</div><div class="line">B---C</div></pre></td></tr></table></figure><h3 id="题解and代码。"><a href="#题解and代码。" class="headerlink" title="题解and代码。"></a>题解and代码。</h3><p>比较经典的递归入门问题。<br>递归分三步进行：</p><p>第一步将A上面除了最大的那个环，其他环借助由A借助于C环全放到B环上。</p><p>第二步就是直接将最大的环从A移向C。</p><p>第三步是把剩余其他的环从B上移动到C的上面。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">void hhh(int n,char A,char B,char C)</div><div class="line">&#123;</div><div class="line"><span class="keyword">if</span>(n==1)</div><div class="line">&#123;</div><div class="line">cout&lt;&lt;A&lt;&lt;<span class="string">"---"</span>&lt;&lt;C&lt;&lt;endl;</div><div class="line"><span class="built_in">return</span>;</div><div class="line">&#125;</div><div class="line">hhh(n-1,A,C,B);//第一步</div><div class="line">cout&lt;&lt;A&lt;&lt;<span class="string">"---"</span>&lt;&lt;C&lt;&lt;endl;//第二步</div><div class="line">hhh(n-1,B,A,C);//第三步</div><div class="line"><span class="built_in">return</span>;</div><div class="line">&#125;</div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">int n;</div><div class="line"><span class="keyword">while</span>(cin&gt;&gt;n)</div><div class="line">&#123;</div><div class="line">hhh(n,<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>);</div><div class="line">&#125;</div><div class="line"><span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="1185-【明明的随机数】"><a href="#1185-【明明的随机数】" class="headerlink" title="1185: 【明明的随机数】"></a>1185: 【明明的随机数】</h3><p>描述<br>题目描述：<br>明明想在学校中请一些同学一起做一项问卷调查，为了实验的客观性，他先用 计算机生成了N个1到1000之间的随机整数（N≤100），对于其中重复的数字，只保留一个，把其余相同的数去掉，不同的数对应着不同的学生的学号。然 后再把这些数从小到大排序，按照排好的顺序去找同学做调查。请你协助明明完成“去重”与“排序”的工作。</p><p>输入：<br>有2行，第1行为1个正整数，表示所生成的随机数的个数：<br>N<br>第2行有N个用空格隔开的正整数，为所产生的随机数。</p><p>输出：<br>也是2行，第1行为1个正整数M，表示不相同的随机数的个数。第2行为M个用空格隔开的正整数，为从小到大排好序的不相同的随机数。</p><h4 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">10</div><div class="line">20 40 32 67 40 20 89 300 400 15</div></pre></td></tr></table></figure><h4 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">8</div><div class="line">15 20 32 40 67 89 300 400</div></pre></td></tr></table></figure><p>题目分2个步骤完成。<br>第一步：排序。<br>第二步：去重。</p><p>1.排序如果用sort完成，去掉重复的元素，可以考虑在输出的时候先输出第一个数组的元素。然后后面循环输出的时候写循环条件和前一个不相同的可以输出。<br>2.如果用数组进行的是桶排序，对每个元素都进行标记，把那些标记过的元素输出就可以去重了。<br>可能大家没听过桶排，直接用核心代码解释吧，其实你们可能还用过，只是名称不懂而已。<br>非常注意的是这个题目的格式，要知道最后一个数字后面是没有空格的。</p><h3 id="桶排代码"><a href="#桶排代码" class="headerlink" title="桶排代码"></a>桶排代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(int i=1;i&lt;=1000;i++)</div><div class="line">&#123;</div><div class="line">a[i]=0;</div><div class="line">&#125;</div><div class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++)</div><div class="line">    &#123;</div><div class="line">    cin&gt;&gt;x;</div><div class="line">    a[x]=1;</div><div class="line">&#125;</div><div class="line"><span class="keyword">for</span>(int j=1;j&lt;=1000;j++)</div><div class="line">&#123;</div><div class="line"><span class="keyword">if</span>(a[j]==1)</div><div class="line">&#123;</div><div class="line">m++;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">cout&lt;&lt;m&lt;&lt;endl;</div><div class="line">int c=0;</div><div class="line"><span class="keyword">for</span>(int j=1;j&lt;=1000;j++)</div><div class="line">&#123;</div><div class="line"><span class="keyword">if</span>(a[j]==1)</div><div class="line">&#123;</div><div class="line">cout&lt;&lt;j;</div><div class="line">c++;</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span>(c!=m)</div><div class="line">&#123;</div><div class="line">cout&lt;&lt;<span class="string">" "</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="非水题"><a href="#非水题" class="headerlink" title="非水题"></a>非水题</h2><h3 id="1410-屌丝的逆袭"><a href="#1410-屌丝的逆袭" class="headerlink" title="1410: 屌丝的逆袭"></a>1410: 屌丝的逆袭</h3><p>描述<br>题目描述：<br>毕业于普通本科的小Q一直自称是资深屌丝，不仅学校不知名，甚至他自己在这个普通学校也是默默无闻——直到临近毕业的时候，班里5朵金花中的2位甚至从没和他说过话！<br>　　谁又能想到，如此不起眼的小Q在历经重重面试环节后，竟然如愿以偿加入了心仪已久的腾讯公司！消息刚刚传开的那几天，这在他们班甚至整个学院都是讨论的热门话题，如果这时候你还表示不知道小Q是谁，你都会被大家当作怪物的。<br>　　正所谓野百合也有春天，屌丝也有逆袭的那一天！<br>　　<br>　　刚到腾讯大厦上班的那几天，小Q眼中的一切都是那么新鲜，连每天见到的前台MM在他眼中都胖的那么可爱。小Q就这样在紧张与兴奋的情绪中度过了一天又一天，每天即勤奋认真又小心翼翼，很希望能给主管留下个好印象，以免失去这来之不易的工作机会。<br>　　一段时间以后，随着对工作环境以及同事的熟悉，小Q逐渐放松下来，在工作间隙，他细细观察了自己的工作环境，发现整个工作室是一个N行M列的矩形布局，或者是因为屌丝的本性逐步暴露，他还暗自给每个同事在心里进行了魅力值评分（为区别男女，男生一律用负整数表示，女生一律用正整数表示）。<br>　　现在，小Q把所有人的数据记录下来，并且这样定义一个位置的价值：<br>　　1、一个位置的价值只和其上下左右四个邻居的魅力值有关（对于靠边的位置，只考虑其存在的邻居）；<br>　　2、如果某位置的邻居和该位置主人性别不同，则总分加上邻居魅力值的绝对值，否则减去；<br>　　3、对周围所有邻居的数据处理后，最终的得分即为这个位置的最终得分，得分越高，则该位置越好；</p><p>　　现在你能帮助小Q计算一下哪里才是最佳位置吗？</p><p>输入：<br>输入包含多组测试数据；<br>每组测试数据的第一行包含2个整数N和M，表示工作室的布局是N行M列；<br>接下来的N行，每行有M个整数，分别表示对应位置员工的魅力值数据Ki，正整数表示女生的魅力值，负整数表示男生的魅力值；<br>N和M为0的时候表示输入数据结束。</p><p>[数据范围]<br>N&lt;=20<br>M&lt;=20<br>-100&lt;=Ki&lt;=100</p><p>输出：<br>请计算并输出最佳位置的行列号以及对应的得分，如果得分最高的位置有多个，则请输出行号最小的那个，行号还相同的话，再比较列号，只输出列号最小的那个即可。</p><h4 id="样例输入-4"><a href="#样例输入-4" class="headerlink" title="样例输入"></a>样例输入</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">2 3</div><div class="line">5 -4 3</div><div class="line">-6 3 7</div><div class="line">0 0</div></pre></td></tr></table></figure><h4 id="样例输出-4"><a href="#样例输出-4" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">1 2 11</div></pre></td></tr></table></figure><h3 id="题目分析-amp-amp-代码实现。"><a href="#题目分析-amp-amp-代码实现。" class="headerlink" title="题目分析&amp;&amp;代码实现。"></a>题目分析&amp;&amp;代码实现。</h3><p>这个题目其实很简单，类似于搜索里面的dfs，但是比搜索要简单，因为不用标记，只需要记录每个点所谓的魅力值就可以了。emmm代码实现里面讲解的比较清晰。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;iostream&gt;  </span></div><div class="line"><span class="comment">#include&lt;cmath&gt;  </span></div><div class="line">using namespace std;</div><div class="line">int emm[4][2]=&#123;&#123;-1,0&#125;,&#123;1,0&#125;,&#123;0,-1&#125;,&#123;0,1&#125;&#125;;</div><div class="line">//用一个二维数组，来规定搜索的方向，当然这里用2个一维数组也可以。搜索周围的4个点就可以了，不用太严格于从哪个方向开始搜索。</div><div class="line">int m,n,map[25][25];  </div><div class="line">int fen(int a,int b)  </div><div class="line">&#123;  </div><div class="line">    int ans=0,i;  </div><div class="line">    <span class="keyword">for</span>(i=0;i&lt;4;i++)  </div><div class="line">    &#123;  </div><div class="line">        int tx=a+emm[i][0];  </div><div class="line">        int ty=b+emm[i][1];//相当于找这个点的上下左右的各个人的魅力值。  </div><div class="line">        <span class="keyword">if</span>(tx&lt;1||ty&lt;1||tx&gt;n||ty&gt;m)  </div><div class="line">            <span class="built_in">continue</span>;//判断查找的点是否越界，如果越界进行下一次循环，进入下一次查找。  </div><div class="line">        <span class="keyword">if</span>(map[a][b]*map[tx][ty]&lt;0)  </div><div class="line">            ans+=abs(map[tx][ty]); //2个人魅力值是负的就绝对值相加。 </div><div class="line">        <span class="keyword">else</span>  </div><div class="line">            ans-=abs(map[tx][ty]); //是正的就相减。 </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> ans;  </div><div class="line">&#125;  </div><div class="line">int main()  </div><div class="line">&#123;  </div><div class="line">    int i,j,max,x,y,score[25][25];  </div><div class="line">    <span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m,n,m)  </div><div class="line">    &#123;  </div><div class="line">        <span class="keyword">for</span>(i=1;i&lt;=n;i++)  </div><div class="line">        &#123;</div><div class="line"> <span class="keyword">for</span>(j=1;j&lt;=m;j++) </div><div class="line">     &#123;</div><div class="line">                cin&gt;&gt;map[i][j]; </div><div class="line">                &#125;</div><div class="line">            &#125; </div><div class="line">        max=-9999999;  </div><div class="line">        <span class="keyword">for</span>(i=1;i&lt;=n;i++)  </div><div class="line">            <span class="keyword">for</span>(j=1;j&lt;=m;j++)  </div><div class="line">            &#123;  </div><div class="line">                score[i][j]=fen(i,j); //从最开始的那个点开始进行搜索。 </div><div class="line">                <span class="keyword">if</span>(score[i][j]&gt;max)  </div><div class="line">                &#123;  </div><div class="line">                    max=score[i][j]; //用max来记录。 </div><div class="line">                    x=i,y=j;  </div><div class="line">                &#125; </div><div class="line"><span class="keyword">else</span> <span class="keyword">if</span>(score[i][j]==max)</div><div class="line">&#123;</div><div class="line"><span class="built_in">continue</span>;//如果后面找到的值与之相等，不管，直接跳过。</div><div class="line"> &#125; </div><div class="line">            &#125; </div><div class="line">cout&lt;&lt;x&lt;&lt;<span class="string">" "</span>&lt;&lt;y&lt;&lt;<span class="string">" "</span>&lt;&lt;max&lt;&lt;endl;   </div><div class="line">    &#125;  </div><div class="line">    <span class="built_in">return</span> 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure><p>这题也就那样吧。逃）。</p><h3 id="1018-A-B-again"><a href="#1018-A-B-again" class="headerlink" title="1018: A+B again"></a>1018: A+B again</h3><p>描述<br>题目描述：<br>谷学长有一个非常简单的问题给你，给你两个整数A和B，你的任务是计算A+B。</p><p>输入：<br>输入的第一行包含一个整数T(T&lt;=20)表示测试实例的个数，然后2*T行，分别表示A和B两个正整数。注意整数非常大，那意味着你不能用32位整数来处理。你可以确定的是整数的长度不超过1000。</p><p>输出：<br>对于每一个样例，你应该输出两行，第一行是”Case #:”,#表示第几个样例，第二行是一个等式”A+B=Sum”,Sum表示A+B的结果。注意等式中有空格。</p><h4 id="样例输入-5"><a href="#样例输入-5" class="headerlink" title="样例输入"></a>样例输入</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">2</div><div class="line">1</div><div class="line">2</div><div class="line">112233445566778899</div><div class="line">998877665544332211</div></pre></td></tr></table></figure><p>样例输出<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Case 1:</div><div class="line">1 + 2 = 3</div><div class="line">Case 2:</div><div class="line">112233445566778899 + 998877665544332211 = 1111111111111111110</div></pre></td></tr></table></figure></p><h3 id="高精度模版-amp-amp-题目分析。"><a href="#高精度模版-amp-amp-题目分析。" class="headerlink" title="高精度模版&amp;&amp;题目分析。"></a>高精度模版&amp;&amp;题目分析。</h3><p>注意事项：高精度加法计算，注意每个加法位置要对整齐。然后同时要注意题目条件把数组开大一点。当然0+0的值也是要有结果的。<br>这个题目当然要用字符来储存数据，毕竟int，longlong，unsigned longlong太小了。然后转换成每个位置的计算。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include&lt;string.h&gt;</span></div><div class="line"><span class="comment">#include&lt;iostream&gt;</span></div><div class="line"><span class="comment">#include&lt;string&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line">using namespace std;</div><div class="line">int a[1500],b[1500],c[1501],lena,lenb,lenc,i,j,x,k;</div><div class="line">void add(char *a1,char *b1)</div><div class="line">&#123;</div><div class="line">    char temp[10000];</div><div class="line">    memset(a,0,sizeof(a));</div><div class="line">    memset(b,0,sizeof(b));</div><div class="line">    memset(c,0,sizeof(c));</div><div class="line">    lena=strlen(a1);</div><div class="line">    lenb=strlen(b1);</div><div class="line">    <span class="keyword">for</span>(i=0;i&lt;lena;i++)</div><div class="line">    &#123;</div><div class="line">        a[lena-i]=a1[i]-48;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(i=0;i&lt;lenb;i++)</div><div class="line">    &#123;</div><div class="line">        b[lenb-i]=b1[i]-48;</div><div class="line">    &#125;</div><div class="line">    lenc=1;</div><div class="line">    x=0;</div><div class="line">    <span class="keyword">while</span>(lenc&lt;=lena||lenc&lt;=lenb)//这里进行各个位置上的计算。</div><div class="line">    &#123;</div><div class="line">        c[lenc]=a[lenc]+b[lenc]+x;</div><div class="line">        x=c[lenc]/10;</div><div class="line">        c[lenc]%=10;</div><div class="line">        lenc++;</div><div class="line">    &#125;</div><div class="line">    c[lenc]=x;</div><div class="line">    <span class="keyword">if</span>(c[lenc]==0)</div><div class="line">    &#123;</div><div class="line">        lenc--;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(i=lenc;i&gt;=1;i--)</div><div class="line">    &#123;</div><div class="line">        cout&lt;&lt;c[i];</div><div class="line">    &#125;</div><div class="line">    cout&lt;&lt;endl;</div><div class="line">&#125;</div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">          char a1[1500],b1[1500];</div><div class="line">          int n;cin&gt;&gt;n;</div><div class="line">          <span class="keyword">for</span>(int z=1;z&lt;=n;z++)</div><div class="line">          &#123;</div><div class="line">          cin&gt;&gt;a1&gt;&gt;b1;</div><div class="line">          cout&lt;&lt;<span class="string">"Case "</span>&lt;&lt;z&lt;&lt;<span class="string">":"</span>&lt;&lt;endl;</div><div class="line">          cout&lt;&lt;a1&lt;&lt;<span class="string">" + "</span>&lt;&lt;b1&lt;&lt;<span class="string">" = "</span>;</div><div class="line">          add(a1,b1);</div><div class="line">          &#125;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h3 id="1321-苹果的密码"><a href="#1321-苹果的密码" class="headerlink" title="1321: 苹果的密码"></a>1321: 苹果的密码</h3><p>描述<br>题目描述：<br>yyf得到了苹果，十分高兴，又怕苹果被偷吃，就果断的给装了一个安全系统，并且要给每一个苹果设立了一个有效的密码，一个有效的密码由L（3&lt;=L&lt;=15）(来自传统的拉丁字母集’a’…’z’)组成，至少有一个元音(‘a’, ‘e’, ‘i’, ‘o’, 或者’u’)，至少两个辅音(除去元音以外的音节)，并且有按字母表顺序出现的字母(例如，’abc’是有效的，而’bac’不是) .给定一个期望长度L和C个小写字母，写一个程序，打印出所有的长度为L、能由这些字母组成的有效密码。密码必须按字母表顺序打印出来，一行一个。</p><p>输入：<br>第一行:两个由空格分开的整数，L和C<br>第二行: C个小写字母，密码是由这个字母集中的字母来构建的。</p><p>输出：<br> 每一个输出行包括一个长度为L个字符的密码（每个 之后一个空格）。输出行必须按照字母顺序排列。</p><h4 id="样例输入-6"><a href="#样例输入-6" class="headerlink" title="样例输入"></a>样例输入</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">4 6</div><div class="line">atcisw</div></pre></td></tr></table></figure><h4 id="样例输出-5"><a href="#样例输出-5" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">acis </div><div class="line">acit </div><div class="line">aciw </div><div class="line">acst </div><div class="line">acsw </div><div class="line">actw </div><div class="line">aist </div><div class="line">aisw </div><div class="line">aitw </div><div class="line">astw </div><div class="line">cist </div><div class="line">cisw </div><div class="line">citw </div><div class="line">istw</div></pre></td></tr></table></figure><p>说实话，这个题目我a的比较血腥，300多行代码直接把L从3-15的所有情况讨论了一波（<br>毕竟这个题目数据比较弱）。然而仔细研究一波，发现这就是个简单的深度搜索题目。。。</p><h3 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h3><p>题目分析写在代码注释上面希望大家不要介意，写的很详细了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;cstdio&gt;</span></div><div class="line">int l,c;</div><div class="line">bool b[26];//标记数组</div><div class="line">char m[15];//密码</div><div class="line">void dfs(int n,int j)</div><div class="line">&#123;</div><div class="line">    int i,sum;</div><div class="line">    int K[26]=&#123;0&#125;;</div><div class="line">    <span class="keyword">if</span>(n==l)//密码是否达到题目要求长度</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">for</span>(i=0;i&lt;l;i++)</div><div class="line">        &#123;</div><div class="line">            K[m[i]]++;//统计密码里面每个出现的小写字母的个数</div><div class="line">        &#125;</div><div class="line">        sum=K[0]+K[4]+K[8]+K[14]+K[20];//统计小写元音字母个数</div><div class="line">        <span class="keyword">if</span>(sum&gt;=1&amp;&amp;l-sum&gt;=2)//判断条件  元音字母个数大于等于1 且 辅音字母大于等于2</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">for</span>(i=0;i&lt;l;i++)</div><div class="line">            &#123;</div><div class="line">                <span class="built_in">printf</span>(<span class="string">"%c"</span>,m[i]+<span class="string">'a'</span>);//输出字母使加97</div><div class="line">            &#125;</div><div class="line">             <span class="built_in">printf</span>(<span class="string">" \n"</span>);//每次输出一个有效密码，根据题意应该还要输出一个空格！并且换行。</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(i=j;i&lt;26;i++)//保证字母顺序</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span>(b[i]!=0)</div><div class="line">        &#123;</div><div class="line">            m[n]=i;</div><div class="line">            b[i]=<span class="literal">false</span>;</div><div class="line">            dfs(n+1,i);</div><div class="line">            b[i]=<span class="literal">true</span>;//搜完后还原标记，以便后面的字母使用现在这个字母</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span>;</div><div class="line">&#125;</div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">    char a;</div><div class="line">    scanf(<span class="string">"%d%d"</span>,&amp;l,&amp;c);//输入两个数字</div><div class="line">    getchar();//此处注意换行符<span class="string">'\n'</span>也是一个字符，会影响到下面输入的字母，因此用getchar()消化掉</div><div class="line">    <span class="keyword">for</span>(int i=0;i&lt;c;i++)</div><div class="line">    &#123;</div><div class="line">        scanf(<span class="string">"%c"</span>,&amp;a);</div><div class="line">        b[a-<span class="string">'a'</span>]=<span class="literal">true</span>;//标记出现过的字母，也可以写成b[a-97]=1;ASCLL上的小写字母是从97开始的,为了使b[0]对应a，此处应该减去一个<span class="string">'a'</span>的值97；</div><div class="line">    &#125;</div><div class="line">    dfs(0,0);//从零开始，保证密码字母顺序</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="1415-F4ck-Me"><a href="#1415-F4ck-Me" class="headerlink" title="1415: F4ck Me"></a>1415: F4ck Me</h3><p>描述<br>题目描述：<br>好无聊啊~</p><p>谁来 AC 我啊~</p><p>输入：<br>每行输入一个句子，你只需要统计每个小写字母出现的次数，每个字符串至多长100000 . 输入结束为文件结尾（EOF）</p><p>注意，直接使用cin可能会超时哦！</p><p>输出：<br>对于每行数据，输出每个字母出现次数，格式为： X:N</p><p>每组数据后输出一个空行。</p><h4 id="样例输入-7"><a href="#样例输入-7" class="headerlink" title="样例输入"></a>样例输入</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hello, this is my first acm contest!</div><div class="line">work hard <span class="keyword">for</span> neuq acm.</div></pre></td></tr></table></figure><h4 id="样例输出-6"><a href="#样例输出-6" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">a:1</div><div class="line">b:0</div><div class="line">c:2</div><div class="line">d:0</div><div class="line">e:2</div><div class="line">f:1</div><div class="line">g:0</div><div class="line">h:2</div><div class="line">i:3</div><div class="line">j:0</div><div class="line">k:0</div><div class="line">l:2</div><div class="line">m:2</div><div class="line">n:1</div><div class="line">o:2</div><div class="line">p:0</div><div class="line">q:0</div><div class="line">r:1</div><div class="line">s:4</div><div class="line">t:4</div><div class="line">u:0</div><div class="line">v:0</div><div class="line">w:0</div><div class="line">x:0</div><div class="line">y:1</div><div class="line">z:0</div><div class="line"></div><div class="line">a:2</div><div class="line">b:0</div><div class="line">c:1</div><div class="line">d:1</div><div class="line">e:1</div><div class="line">f:1</div><div class="line">g:0</div><div class="line">h:1</div><div class="line">i:0</div><div class="line">j:0</div><div class="line">k:1</div><div class="line">l:0</div><div class="line">m:1</div><div class="line">n:1</div><div class="line">o:2</div><div class="line">p:0</div><div class="line">q:1</div><div class="line">r:3</div><div class="line">s:0</div><div class="line">t:0</div><div class="line">u:1</div><div class="line">v:0</div><div class="line">w:1</div><div class="line">x:0</div><div class="line">y:0</div><div class="line">z:0</div></pre></td></tr></table></figure><h4 id="一个额外的知识点"><a href="#一个额外的知识点" class="headerlink" title="一个额外的知识点"></a>一个额外的知识点</h4><p>这个题目题目提示我们组并没有用，但还是给大家介绍一波。<br>在C++里面cin和cout是速度在计算那些大数据的时候比较容易卡时间然后tle的，而C语言的scanf和printf则不会出现这种情况，那这种情况怎么办呢？<br>不用担心，这里介绍2个猛男函数，可以使cin和cout的速度加快。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ios::syne_with_stdio(<span class="literal">false</span>);</div><div class="line">//放在cin后面，关闭和stdio同步，使速度和scanf一样快</div><div class="line">cin.tie（0）；</div><div class="line">//放在cout后面，输出速度一样加快。</div></pre></td></tr></table></figure></p><h3 id="回归题目。"><a href="#回归题目。" class="headerlink" title="回归题目。"></a>回归题目。</h3><p>题目就比较简单了，单纯的统计小写字母而已，利用ascll值进行循环统计即可。输入字符用gets函数就可以了<br>代码如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include&lt;cstdio&gt;</span></div><div class="line"><span class="comment">#include&lt;cstring&gt;</span></div><div class="line">int main()</div><div class="line">    &#123;</div><div class="line">        char s[100000];</div><div class="line">        <span class="keyword">while</span>(gets(s)!=NULL)//读入一串字符，注意此处不能用scanf(<span class="string">"%s"</span>,s)因为sanf遇到空格停止输入，应该注意</div><div class="line">        &#123;</div><div class="line">            int num[26]=&#123;0&#125;;</div><div class="line">            <span class="keyword">for</span>(int i=0;i&lt;strlen(s);i++)</div><div class="line">            &#123; </div><div class="line">              //统计字母个数</div><div class="line">                <span class="keyword">for</span>(int j=0;j&lt;26;j++)</div><div class="line">                &#123;  </div><div class="line">                 </div><div class="line">                    <span class="keyword">if</span>(s[i] ==(j+97))</div><div class="line">                    &#123;</div><div class="line">                    num[j] ++;</div><div class="line">                    <span class="built_in">break</span>;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">for</span>(int i=0;i&lt;26;i++)</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%c:%d\n"</span>,i+97,num[i]);</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">return</span> 0;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>好了，到这里题解已经结束了，讲的并不是很详细。但无奈时间和精力都不是很充足，如果还有疑问建议在OJ群里面进行交流即可。<br>非常感谢观看。<br>                                              BY Acmclub</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;希望能帮助那些卡题目的朋友们&quot;&gt;&lt;a href=&quot;#希望能帮助那些卡题目的朋友们&quot; class=&quot;headerlink&quot; title=&quot;希望能帮助那些卡题目的朋友们&quot;&gt;&lt;/a&gt;希望能帮助那些卡题目的朋友们&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;by Acmclub：&lt;br&gt;汤畅
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>利用vitural box创建一个虚拟机</title>
    <link href="http://zoomdong.site/2017/11/06/Ubutun-anzhuang/"/>
    <id>http://zoomdong.site/2017/11/06/Ubutun-anzhuang/</id>
    <published>2017-11-06T12:37:48.000Z</published>
    <updated>2017-11-11T14:53:05.916Z</updated>
    
    <content type="html"><![CDATA[<h1 id="希望能帮助那些正在安装虚拟机的朋友们"><a href="#希望能帮助那些正在安装虚拟机的朋友们" class="headerlink" title="希望能帮助那些正在安装虚拟机的朋友们"></a>希望能帮助那些正在安装虚拟机的朋友们</h1><hr><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>首先下载一个Vitural box，用这个软件来模拟虚拟机。点击这里–&gt;<a href="https://www.virtualbox.org/" target="_blank" rel="external">下载地址</a>   下载最新的版本（各位一般都是用Windows系统，那就下Windows的）。（其实这里不用Vitural box也可以，也有一些其他的虚拟机软件例如VMware）。个人感觉区别不是很大。当然vitural box也可以模拟出很多其他的系统比如windows 或者mac。</p><h2 id="安装完成之后"><a href="#安装完成之后" class="headerlink" title="安装完成之后"></a>安装完成之后</h2><hr><p>安装的界面应该是这个样子的：<br><img src="/2017/11/06/Ubutun-anzhuang/3333.png" alt="如图"></p><p>PS:安装过程可能会出现物理电脑断网的情况，这是很正常的，毕竟要建立一个链接。这里你的物理电脑断开网络链接是比较正常的。</p><p>emmm，安装完成之后打开电脑上应该会出现Vitural box的快捷方式。<br>下图为点开后的效果图：<br><img src="/2017/11/06/Ubutun-anzhuang/222.png" alt="点开后的效果图"></p><h2 id="下载一个镜像光盘（为后面创建虚拟机打基础）"><a href="#下载一个镜像光盘（为后面创建虚拟机打基础）" class="headerlink" title="下载一个镜像光盘（为后面创建虚拟机打基础）"></a>下载一个镜像光盘（为后面创建虚拟机打基础）</h2><p>在Ubuntu官网里面下一个镜像文件就可以啦。<a href="http://cn.ubuntu.com/?_ga=2.25279998.215727107.1510361750-922053796.1508687335" target="_blank" rel="external">官网地址请点击</a><br>下载界面如下图：<br><img src="/2017/11/06/Ubutun-anzhuang/444.png" alt="下载界面"><br>选择一个64位（现在一般windows都是64位，具体情况自己定）开始下载，可能下载比较慢，多等一会儿就行了。<br>这个文件是你未来虚拟机的系统吧。<br>下载完成后的文件形式如下图：<br><img src="/2017/11/06/Ubutun-anzhuang/555.png" alt="下载完成后"></p><h2 id="开始创建一个虚拟机"><a href="#开始创建一个虚拟机" class="headerlink" title="开始创建一个虚拟机"></a>开始创建一个虚拟机</h2><p>当一切都被搞定之后,是时候来搞一波创建了。<br>步骤如下：</p><p>1 打开vitural box点开新建，自己给虚拟机取名称，这里按自己喜好。不影响啥。</p><p>2 分配内存，这里是运行内存，分配视具体电脑的内存而定。不是很懂这个可以按照上面的推荐点击。</p><p>3 分配硬盘容量，这里同样是把电脑的硬盘容量分一部分给你的虚拟机。同2。</p><p>4 虚拟硬盘文件类型是磁盘映像（前面有下载）。</p><p>5 关于动态分配和固定大小类似于选择之后以后虚拟机内存还能不能修改，这里我选择的是动态分配。</p><p>6 文件位置和大小，自己选择一个文件夹去保存虚拟硬盘文件就行了。自己找的到就行。</p><p>7 创建完成之后。你的vitural box就会变成这个样子（当然我们设置的那些参数可能会不一样）：<br><img src="/2017/11/06/Ubutun-anzhuang/111.png" alt="如图"></p><p>然后点击启动就可以使用你的虚拟机啦！！<br><img src="/2017/11/06/Ubutun-anzhuang/666.png" alt="我的虚拟机"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>虚拟机相当于在你自己的电脑上又重新开了一台新的电脑，你在这个电脑上有任何操作都不会对你的物理电脑造成任何影响。可能虚拟机在你的眼里可能就只是一个软件。但相对于你的物理电脑而言，却又是一台电脑了。因而借助虚拟机，你可进行很多骚操作（比如写病毒），同时这台电脑的权限也属于你，你有技术可以进行很多你想要的操作。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;希望能帮助那些正在安装虚拟机的朋友们&quot;&gt;&lt;a href=&quot;#希望能帮助那些正在安装虚拟机的朋友们&quot; class=&quot;headerlink&quot; title=&quot;希望能帮助那些正在安装虚拟机的朋友们&quot;&gt;&lt;/a&gt;希望能帮助那些正在安装虚拟机的朋友们&lt;/h1&gt;&lt;hr&gt;
&lt;h2 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>搭建blog时踩过的坑</title>
    <link href="http://zoomdong.site/2017/10/10/name/"/>
    <id>http://zoomdong.site/2017/10/10/name/</id>
    <published>2017-10-10T15:35:04.000Z</published>
    <updated>2017-11-06T13:03:19.955Z</updated>
    
    <content type="html"><![CDATA[<h1 id="希望能帮助那些在学习搭建的朋友们"><a href="#希望能帮助那些在学习搭建的朋友们" class="headerlink" title="希望能帮助那些在学习搭建的朋友们"></a>希望能帮助那些在学习搭建的朋友们</h1><hr><h2 id="搭建博客的很多操作我们都没见识过。尽量为大家指点迷津。"><a href="#搭建博客的很多操作我们都没见识过。尽量为大家指点迷津。" class="headerlink" title="搭建博客的很多操作我们都没见识过。尽量为大家指点迷津。"></a>搭建博客的很多操作我们都没见识过。尽量为大家指点迷津。</h2><h2 id="博客的安装套路"><a href="#博客的安装套路" class="headerlink" title="博客的安装套路"></a>博客的安装套路</h2><p>参考教程<br><a href="https://rivercome.github.io/2017/09/27/undefined-title/" target="_blank" rel="external">5分钟教会你黑科技</a><br>（王鹏学长教科书般的教学）（5分钟速成版）<br><a href="http://blog.csdn.net/erchowyo/article/details/54407601" target="_blank" rel="external">百度的搭建方法</a><br>（CSDNdalao操作）（对着不同的教程学，取长补短）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">先看如何搭建一个内地博客（如果你会下面直接跳过）</div></pre></td></tr></table></figure></p><h2 id="安装工作"><a href="#安装工作" class="headerlink" title="安装工作"></a>安装工作</h2><p>先安装node和git，安装地址前面的网址里面有，跟着教学里一步步走，保你不（yi）会（ding）出错，node的安装环境以windows为例，在这里安装64位的安装包，因为32位的安装包里面指令功能不齐全（并没有任何卵用）。这里我强烈建议的是这里大家可以先下载一个sublime：<a href="http://www.sublimetext.com/2" target="_blank" rel="external">下载地址</a><br>因为如果经常用记事本会出现一些你我都难以预测的错误。</p><h2 id="从git这里正式开始"><a href="#从git这里正式开始" class="headerlink" title="从git这里正式开始"></a>从git这里正式开始</h2><p>git的安装看永辉学长的教程就可以了（我觉得还行）<br><a href="http://andyhui.top/2017/09/20/gitfirstuse/" target="_blank" rel="external">git安装及使用指南</a><br>下载git的过程教程都有（注意一下那些小的细节即可）<br>安装完成后，emmm，这些都比较简单。<br>检测成功安装git后，后面那些花式操作先别管。<br>搭建博客可以直接跳到生成SSH秘匙那步。<br>按照相应的操作生成完并连接上之后。<br>回到王鹏学长的教程<a href="https://rivercome.github.io/2017/09/27/undefined-title/" target="_blank" rel="external">5分钟教你黑科技</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">友情提示1：</div><div class="line">永辉学长的git和github的其他操作。</div><div class="line">初次接触git建议先别学习，咱们先搭建博客。</div><div class="line">以免遇到神奇bug猝死凌晨（like me）</div></pre></td></tr></table></figure><h2 id="搭建本地blog（我觉得还行）"><a href="#搭建本地blog（我觉得还行）" class="headerlink" title="搭建本地blog（我觉得还行）"></a>搭建本地blog（我觉得还行）</h2><p>按照步骤走，定义出属于你自己的blog文件夹。<br>注意这个文件夹相当于就是你博客的根，放在一个你找得到的地方，毕竟以后写博客，更换主题还要依靠这个文件夹。文件夹创造好了，相当于你的博客有了地基，以后你的一系列操作都要围绕这个文件夹展开。</p><p>##cmd操作<br>王鹏学长用的那个操作指令上面没有使用git操作，他个人比较喜欢cmd，当然，我个人也觉得输入指令用cmd比较好，因为windows下用命令安装一些东西（比如后面的文件）会出现丢失情况（这个是我多次碰壁之后学长传授的经验），所以建议大家用cmd（操作和git差不多，在博客文件夹内按住shift，点击鼠标右键，会弹出一个“在此处打开命令窗口”这就是cmd）。</p><h2 id="hexo指令"><a href="#hexo指令" class="headerlink" title="hexo指令"></a>hexo指令</h2><p>如果你的hexo指令在git上老莫名奇妙出现errors（like me），有2种方法。<br>1，自行百度解决困难。<br>2，用cmd进行操作。（前提是你的noje等那些基础应用安装好了）<br>反正2种我都试过，个人比较推荐第一种，自己动手丰衣足食。</p><h2 id="内地成功之后"><a href="#内地成功之后" class="headerlink" title="内地成功之后"></a>内地成功之后</h2><p>到这里你应该是能打开以landscape为主题的hexo界面<br>后面继续分析如何把博客由独乐乐变为众乐乐</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 友情提示2：</span></div><div class="line">这里可能会好奇关于主题的问题。</div><div class="line">我建议大家先别学（先把地基搞好再骚）。</div><div class="line">最后我会分享一个我觉得不错的教程（赞）。</div><div class="line">这里直接进入网络同步</div></pre></td></tr></table></figure><h2 id="关于网络同步（瑟瑟发抖）"><a href="#关于网络同步（瑟瑟发抖）" class="headerlink" title="关于网络同步（瑟瑟发抖）"></a>关于网络同步（瑟瑟发抖）</h2><p>生成SSH钥匙那步，结合一下永辉学长git教程上创建github仓库那步，但一定要注意的是：永辉学长取仓库名并不是为了搭建博客，所以比较随意，而我们这里搭建博客是一定要仓库名（在github上创建）必须是github账户名.github.io，一定要是这个格式，否则后面全都GG，这里我错了2次，直接重来了3波。（全屏bug，错的你怀疑人生）。前面那个仓库名就是你博客的网址名，比如我个人的是fireairforce.github.io（安利一波），然后后面乖乖按照操作走，慢慢会成功的。</p><h2 id="总结一波"><a href="#总结一波" class="headerlink" title="总结一波"></a>总结一波</h2><p>我本人搭建博客一共花了整整三天时间（请原谅我的菜），真的是踩了各种坑，关于那些坑太多，我真的。。。。（emmmm）（粘受），我这里给大家分享的都是我踩坑后的解决办法（可能有点水），但真的是干掉了很多bug之后才出现的AC，看见自己的博客出来的时候还蛮激动的，emmm。<br>其实这整个过程当你搭建成功之后再后头看的时候真的很简单。就几个指令（或许真的可以5分钟就解决的），但大家遇到问题的时候还是要先百度去debug，有些错误百度不能给出答案可以找找学长解决。但必须要有自己思考的一个过程。菜鸡的第一遍博客，望各位不要嫌弃。</p><h2 id="NEXT主题的小广告【乱入】"><a href="#NEXT主题的小广告【乱入】" class="headerlink" title="NEXT主题的小广告【乱入】"></a>NEXT主题的小广告【乱入】</h2><p>分享一个网站：<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">请点击</a>，里面讲解的灰常详细，看看就好。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;希望能帮助那些在学习搭建的朋友们&quot;&gt;&lt;a href=&quot;#希望能帮助那些在学习搭建的朋友们&quot; class=&quot;headerlink&quot; title=&quot;希望能帮助那些在学习搭建的朋友们&quot;&gt;&lt;/a&gt;希望能帮助那些在学习搭建的朋友们&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;搭建博客
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Welcome to my blog</title>
    <link href="http://zoomdong.site/2017/10/09/hello-world/"/>
    <id>http://zoomdong.site/2017/10/09/hello-world/</id>
    <published>2017-10-09T08:39:27.821Z</published>
    <updated>2017-10-13T18:11:40.681Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
